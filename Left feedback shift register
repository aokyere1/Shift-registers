module top_module(
    input clk,
    input reset,          // Active-high synchronous reset to 5'h1
    output reg [4:0] q
);
    reg [4:0] next_q;

    always @(*) begin
        next_q[4] = q[0] ^ 1'b0;            // feedback: q[0] XOR 0 = q[0]
        next_q[3] = q[4];
        next_q[2] = q[3] ^ q[0];
        next_q[1] = q[2];
        next_q[0] = q[1];
    end

    always @(posedge clk) begin
        if (reset)
            q <= 5'h1;
        else
            q <= next_q;
    end
endmodule
